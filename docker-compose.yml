services:
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    ports:
      - "8191:8191"
    environment:
      - LOG_LEVEL=info
    restart: unless-stopped

  app:
    build:
      context: .
      args:
        - RUN_TESTS=false
    container_name: website-searcher-app
    environment:
      - CF_URL=http://flaresolverr:8191/v1
      - CSRIN_PAGES=2
    depends_on:
      - flaresolverr
    stdin_open: true
    tty: true
    # No command override: default CMD ["websearcher"] keeps it interactive
    # Use --no-playwright to force non-Playwright fallback if needed

  tests:
    image: rust:1.89
    container_name: website-searcher-tests
    platform: linux/amd64
    working_dir: /workspace
    volumes:
      - ./:/workspace
    environment:
      - RUST_BACKTRACE=1
    # CF_URL not required for tests (mocked)
    entrypoint: ["cargo", "test", "--all", "--locked", "--verbose"]

  playwright:
    image: mcr.microsoft.com/playwright:v1.46.1-jammy
    container_name: website-searcher-playwright
    platform: linux/amd64
    working_dir: /workspace
    volumes:
      - ./:/workspace
    environment:
      - PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
      - PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=0
      - CSRIN_PAGES=2
    # Example interactive run:
    # docker compose run --rm playwright bash -lc "npm i -D playwright && node scripts/csrin_search.js 'elden ring'"
    # Or run the Rust app with Playwright path:
    # docker compose run --rm playwright bash -lc "npm i -D playwright && cargo build --release --locked && CSRIN_PAGES=2 target/release/website-searcher 'elden ring' --sites csrin --format table --debug --no-cf"
