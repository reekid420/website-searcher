---
alwaysApply: false
description: Cloudflare solver usage and scraping guidance for protected/dynamic sites
---

# Cloudflare & Scraping Guidance (Updated)

Defaults & flags
- CF solver is ON by default. Use `--no-cf` (CLI) or `no_cf` (GUI) to disable.
- CF endpoint defaults to `http://localhost:8191/v1`; override with `--cf-url` (CLI) or `cf_url` (GUI).
- Run FlareSolverr locally if needed:
  - `docker run -d --name flaresolverr -p 8191:8191 ghcr.io/flaresolverr/flaresolverr:latest`
 - Playwright: For `cs.rin.ru`, a Playwright-based fallback is used automatically when needed unless `--no-playwright` is passed. Provide cookies via `PLAYWRIGHT_COOKIE` env or `--cookie`.

Per-site behavior
- Mark sites that require CF with `requires_cloudflare = true` in [crates/core/src/config.rs](mdc:crates/core/src/config.rs).
- `gog-games.to` is solver-blacklisted in practice: prefer normal fetch + AJAX JSON/HTML fragment fallback; strict filtering to `/game/` paths and query matches.
- `cs.rin.ru` (listing/search): Prefer non-solver approaches (listing pages, Atom feed, Playwright helper). Solver is allowed only if `ALLOW_CSRIN_SOLVER=1` or a local/non-default CF URL is supplied.

Selectors & fallbacks
- Prefer site-specific selectors for titles/links (see [crates/core/src/config.rs](mdc:crates/core/src/config.rs)).
- Parser fallback scans all `a[href]` and matches the query in text or href slug.
- If anchor text is empty, titles are derived from the last URL segment (slug) in [crates/core/src/parser.rs](mdc:crates/core/src/parser.rs).
- Site-specific filters (e.g., FitGirl) drop pagination/comments/teasers/dates.
- Additional filters: remove tag/category/inquiry pages for FitGirl; remove pagination/search navigation for SteamRip; tighten `gog-games` URLs to `/game/` paths.

Listing/FrontPage modes
- For sites without search, use `SearchKind::{FrontPage, ListingPage}` and filter locally.
- Examples: `elamigos.site` (FrontPage), `ankergames.net` (PathEncoded or ListingPage depending on config).

Cookies & headers
- You may forward your browser session: `--cookie "key=value; other=value2"` (CLI) or `cookie` (GUI input).
- Cookies are forwarded to both normal fetches and FlareSolverr. Some sites may also require XSRF headers; common XSRF header names are injected from the cookie when possible for AJAX fallbacks.

Debug & troubleshooting
- Use `--debug` to print per-site URL and sizes (CLI) or enable `debug` toggle (GUI). On zero results, HTML/JSON samples are saved to [debug/](mdc:debug/) for selector tuning (CLI).
- If CF returns empty for a site, try disabling CF or provide cookies.

Interactive & output
- CLI: Running without a query launches interactive mode (prompts for phrase and sites). TUI by default for table output; `--format json` prints JSON.
- GUI: React-based controls for site selection and all flags; results render in-app.
