name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    name: build-test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest           # x86_64 Linux
          - os: ubuntu-24.04-arm        # arm64 Linux
          - os: macos-latest                # arm64 macOS (Apple Silicon)
          - os: windows-latest          # x86_64 Windows
          - os: windows-11-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.87.0
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Linux system deps
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libglib2.0-dev libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Build CLI (release) for sidecar
        run: cargo build -p website-searcher --release

      - name: Stage Tauri sidecar
        shell: bash
        run: |
          mkdir -p src-tauri/bin
          TRIPLE=$(rustc -Vv | awk '/host:/{print $2}')
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cp target/release/website-searcher.exe src-tauri/bin/website-searcher-$TRIPLE.exe
          else
            cp target/release/website-searcher src-tauri/bin/website-searcher-$TRIPLE
          fi

      - name: fmt
        run: cargo fmt --all -- --check

      - name: clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: test
        env:
          RUST_BACKTRACE: 1
          NO_COLOR: 1
        run: cargo test --all --verbose --locked

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Playwright deps
        run: |
          npm ci || npm i -D playwright
          npx playwright install --with-deps

      - name: Playwright smoke (csrin)
        env:
          CSRIN_PAGES: 1
        run: |
          cargo build --release --locked
          .${{ runner.os == 'Windows' && '\\' || '/' }}target${{ runner.os == 'Windows' && '\\release\\' || '/release/' }}website-searcher${{ runner.os == 'Windows' && '.exe' || '' }} "elden ring" --sites csrin --format table --debug
 
      - name: install audit
        run: cargo install cargo-audit
      
      - name: audit
        run: cargo audit
